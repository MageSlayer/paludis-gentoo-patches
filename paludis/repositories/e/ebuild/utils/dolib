#!/usr/bin/env bash
# vim: set sw=4 sts=4 et :

# Copyright (c) 2006 Stephen Bennett
#
# Based in part upon dolib from Portage, which is Copyright 1995-2005
# Gentoo Foundation and distributed under the terms of the GNU General
# Public License v2.
#
# This file is part of the Paludis package manager. Paludis is free software;
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software Foundation; either version
# 2 of the License, or (at your option) any later version.
#
# Paludis is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA

source "${PALUDIS_EBUILD_DIR}"/die_functions.bash

if [[ ! -d ${!PALUDIS_IMAGE_DIR_VAR%/}/ ]]; then
    paludis_die_or_error "\${${PALUDIS_IMAGE_DIR_VAR}} not valid; aborting"
fi

if [[ ! -d ${PALUDIS_EBUILD_MODULES_DIR} ]]; then
    paludis_die_or_error "\${PALUDIS_EBUILD_MODULES_DIR} not valid; aborting"
fi

source "${PALUDIS_EBUILD_MODULES_DIR}/multilib_functions.bash"

libdir="${!PALUDIS_IMAGE_DIR_VAR%/}/${DESTTREE#/}/$(ebuild_get_libdir)"

if [[ ${#} -lt 1 ]]; then
    paludis_die_or_error "at least one argument needed"
fi

if [[ ! -d ${libdir} ]]; then
    install -d "${libdir}" || paludis_die_or_error "could not create ${libdir}"
fi

ret=0

for x in "$@"; do
    if [[ -e ${x} ]]; then
        if [[ ! -L ${x} ]]; then
            install ${LIBOPTIONS} "${x}" "${libdir}" || ret=2
        else
            ln -s "$(readlink "${x}")" "${libdir}/$(basename "${x}")" || ret=2
        fi
    else
        echo "${0}: ${x} does not exist"
        ret=2
    fi
done

[[ 0 != "${ret}" ]] && paludis_die_or_error "dolib returned error ${ret}"
exit ${ret}
